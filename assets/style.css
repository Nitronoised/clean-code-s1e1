/* Basic Style */
/*
   * The rule 1.1 Indentation rule from html-and-css is applied throughout the project: no tabs are used, all indents are whitespace
   * The rule 1.2 Lower case spelling from html-and-css is executed throughout the project: all HTML tags, attributes from value, selectors and their values are written in lower case
   * The rule 1.3 Quotes in HTML / CSS document from html-and-css is executed throughout the project: only double quotes are used in HTML and CSS files
   * Rule 2.1 Formatting from html-and-css is performed throughout the project: all block, table and list elements are moved to a separate line and are indented in accordance with the nesting ladder hierarchy.
   * The rule 2.2 Document Type from html-and-css is executed throughout the project: the doctype is present as the first tag in the html document and corresponds to the html5 type
   * The rule 2.3 Mnemonic symbols from html-and-css is applied throughout the project: mnemonic symbols are not used in html files
   * The rule 2.4 type attribute from html-and-css is executed throughout the project: CSS-styles and JS-scripts are included without using this attribute
   * The rule 3.1 Uniform naming style for selectors (classes / id) from html-and-css is implemented throughout the project: all selectors are named in 
   * the same style, while either in accordance with BEM, or all words in lowercase and separated by a hyphen
   * The rule 3.2 meaningful names of identifiers and classes from html-and-css is executed throughout the project: all class and identifier names have 
   * either meaningful names according to their functional meaning (! But NOT APPEARANCE!), Or a template name (also corresponding element 
   * assignment)
   * The rule 3.3 The conciseness of the names of identifiers and classes from html-and-css is carried out throughout the project: all the names of id and classes are clear, long enough to understand their purpose, and at the same time concise Rule 3.4 Tag selectors from html-and-css are enforced throughout the project: tag selectors are not used (except for the deliberate reset of default styles)
   * The rule 3.4 tag selectors from html-and-css are enforced throughout the project: tag selectors are not used (except for the deliberate reset of default styles)
   * The rule 3.5 Indentation in html-and-css blocks is applied throughout the project: the content of all blocks is indented
   * The rule 3.6 Space after property names from html-and-css is applied throughout the project: CSS property values are separated by spaces after the colon
   * The rule 3.7 The semicolon after properties from html-and-css is applied throughout the project: after each CSS rule there is a semicolon




   */
.container {
  background-color: #f8f8f8;
  color: #333;
  font-family: Lato, sans-serif;
}
.heading {
  width: 500px; /*? was  500px */
  margin: 0 auto;
  display: block;
  text-align: right;
}
.heading__img {
  width: 100%;
}
.heading .heading__link {
  font-family: fantasy, cursive;
}

@media (max-width:768px) {

  .heading { text-align: center;}

}
.controls {
  display: block;
  width: 430px; /*? was 400px */
  margin: 0 auto 0;
}
.controls__label {
  width: 56%;
  display: inline-block;
}
.controls__tasks-list {
  margin: 0;
  padding: 0px;
}
li, 
h3 {list-style: none;}

input,
button {outline: none;}

button {
  background: none;
  border: 0px;
  color: #888;
  font-size: 15px;
  width: 60px;
  font-family: Lato, sans-serif;
  cursor: pointer;
}
button:hover {color: #3a3A3a;}

/* Heading */
.controls__title,
.controls__task-label {
  color: #333;
  font-weight: 700;
  font-size: 15px;
  border-bottom: 2px solid #333;
  padding: 30px 0 10px;
  margin: 0;
  text-transform: uppercase;
}
.controls__task-input {
  margin: 0;
  font-size: 18px;
  line-height: 18px;
  height: 21px;
  padding: 0 9px;
  border: 1px solid #dDd;
  background: #FFF;
  border-radius: 6px;
  font-family: Lato, sans-serif;
  color: #888;
}
.controls__task-input:focus {color: #333;}

/* New Task */
.controls__task-label {
  display: block;
  margin: 0 0 20px;
}
.controls__task-input {width: 318px;}
.controls__new-task > button:hover {color: #0FC57C;}

/* Task list */
li {
  overflow: hidden;
  padding: 20px 0;
  border-bottom: 1px solid #eee;
}
li > *{vertical-align: middle;}

li > input[type="checkbox"] {margin: 0 10px;}
li > label {
  padding-left: 10px;
  box-sizing: border-box;
  font-size: 18px;
  width: 226px;
}

li > .controls__task-input {width: 226px}
li > button.controls__button_delete:hover {color: #CF2323;}

.controls__button_img {
  height: 2em;
  transform: rotateZ(45deg);
  transition: transform 200ms ease-in;
}
.controls__button_img:hover {transform: rotateZ(0);}

/* Completed */
#controls__completed-tasks label {
  text-decoration: line-through;
  color: #888;
}

/* Edit Task */
.controls__tasks-list li input[type=text] {display:none}

.controls__tasks-list li.controls__edit-mode input[type=text] {
  display: inline-block;
  width: 224px
}

.controls__tasks-list li.controls__edit-mode label {
  display: none;
}